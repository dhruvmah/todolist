var db = require('../models/simpleDB.js');

var getMain = function(req, res) {
  res.render('main.ejs', {error: null});
};

//displays sign up page	
var signUp = function(req, res) {
	if(req.session.logged){
		res.redirect('/restaurants');
	} else {
		res.render('signup.ejs', {error: null});
		}
	};
//after login button is clicked
var checkLogin = function(req, res) {
	var email = req.body.email;
	var password = req.body.password;
	db.getID(email, function(err, user_id){
		if(err){
		    res.render('main.ejs', {error: err.value});
		} else {
			db.loginUser(user_id, password, function(err, data){
				if(err){
					res.render('main.ejs', {error:err.value});
				} else {
					if (data.logged_in === true) {
						req.session.logged =true; 
						req.session.username = user_id;
						res.redirect("/home");
					} else {
						res.render('main.ejs', {error: 1});
					}
				}
			});
		}
	});
};

//after create account button is pressed
var createAccount = function(req, res) {
	if(req.session.logged){
		res.redirect('/home');
	}
	var email = req.body.email;
	var password1 = req.body.password1;
	var password2 = req.body.password2;
	var first_name = req.body.first_name;
	var last_name = req.body.last_name;
	var school = req.body.school;
	var birthday = req.body.birthday;
	if (email === "" || password1 === "" || password2 === ""
			|| first_name === "" || last_name === "" || school === "") {
		res.render("signup.ejs", {error : 1});
	} else if (password1 != password2) {
		res.render("signup.ejs", {error : 2});
	} else {
		//db.getID(email, function(err, user_id){
			//fucking timestamps are the way to go :(
	//	});
		db.createAccount(email, password, first_name, last_name, school, birthday, function(err, data) {
			if (err) {
				res.render("signup.ejs", {error : err.value});
			} else if (user_id) {
				req.session.logged = true;
				req.session.username = user_id;
				res.redirect("/home");
			}
		
		});
	}
};

//fetches restaurants
var getRestaurants = function(req, res) {
	if(!req.session.logged) {
		res.redirect('/');
	}
	db.findRestaurants(function(err, data){
		if(err){
			res.send("error on restaurants");
		} else if(data) {
			restaurants = [];
			for( i=0; i<data.Items.length; i++){
				newRest = {}
				var name = data.Items[i].Name;
				for( j=0; j<data.Items[i].Attributes.length; j++) {
					if(data.Items[i].Attributes[j].Name == "latitude") {
						var latitude = data.Items[i].Attributes[j].Value;
					} else if(data.Items[i].Attributes[j].Name=="longitude") {
						var longitude = data.Items[i].Attributes[j].Value;
					} else if(data.Items[i].Attributes[j].Name=="description") {
						var description = data.Items[i].Attributes[j].Value;						
					} else if(data.Items[i].Attributes[j].Name=="creator") {
						var creator = data.Items[i].Attributes[j].Value;
					}
				}
				newRest["name"] = name;
				newRest["latitude"] = latitude;
				newRest["longitude"] = longitude;
				newRest["description"] = description;
				newRest["creator"] = creator;
				restaurants.push(newRest);
				}
			res.render("restaurants.ejs", {restaurants:restaurants});
		}
	});
};

//adds restaurants to the database
var addRestaurant = function(req, res) {
	if(!req.session.logged){
		res.redirect('/');
	}
	var creator = req.session.username;
	var latitude = req.body.latitude;
	var longitude = req.body.longitude;
	var name = req.body.name;
	var description = req.body.description;
	db.addRestaurant(name, latitude, longitude, description, creator, function(err, data) {
		if(err) {
			res.send("an error ocurred");
		} else if(data.added) {
			res.redirect("/restaurants");
		} else if(!data.added){
			res.render("error.ejs");
		}
	}
	);
};

//after logout button is pressed
var logout = function(req, res) {
	req.session.logged = false;
	res.redirect('/');
};


var routes = { 
  get_main: getMain,
  check_login: checkLogin,
  create_account: createAccount,
  sign_up: signUp,
  restaurants: getRestaurants,
  add_restaurant: addRestaurant,
  logout: logout
};

module.exports = routes;
